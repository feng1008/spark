#!/usr/bin/python
#-*- coding:utf8 -*-

import sys;
from string import punctuation;
from operator import add;
from pyspark import SparkConf, SparkContext;

APP_NAME = "Get Last 5 App Packages";

def format_imei(imei):
    try:
        new_imei = str(imei);
        if new_imei.isalnum() and len(new_imei) > 13 and len(new_imei) < 16:
            return new_imei;
        else:
            return "";
    except:
        return "";

def format_idfa(idfa):
    try:
        new_idfa = str(idfa).translate(None, punctuation).lower();
        if len(new_idfa) == 32 and new_idfa.isalnum():
            return new_idfa;
        else:
            return "";
    except:
        return "";

def format_mac(mac):
    try:
        new_mac = str(mac).translate(None, punctuation).lower();
        if len(new_mac)!= 12:
            return "";
        else:
            if new_mac == "0"*12 or new_mac.isalnum() == False:
                return "";
            else:
                return new_mac;
    except:
        return "";

def myfilter(onetuple):
    if onetuple[0] == "":
        return False;
    else:
        return True;

def parse(oneline):
    try:
        content = oneline.strip('\r\n').split('&');
        packages = "";
        aat = -1;
        trigger = "nulltrigger.youmidm";
        dt = "";
        imei = "";
        idfa = "";
        mac = "";
        for ele in content:
            if ele.startswith("pns="):
                packages = str(ele.split("=",1)[1]).strip();
            elif ele.startswith("drt="):
                dt = str(ele.split("=",1)[1]).strip();
            elif ele.startswith("ei="):
                imei = format_imei(ele.split("=",1)[1]);
            elif ele.startswith("ifa="):
                idfa = format_idfa(ele.split("=",1)[1]);
            elif ele.startswith("mac="):
                mac = format_mac(ele.split("=",1)[1]);
            elif ele.startswith("aat="):
                aat = int(ele.split("=",1)[1]);
            elif ele.startswith("appk="):
                trigger = ele.split("=",1)[1].strip()
            else:
                continue;

        if aat != 3:
            return ("","");

        if packages == "":
            packages = trigger;
        else:
            packages = packages + "|" + trigger;

        if idfa != "":
            return (idfa, "idfa" + "^" + dt + "^" + packages);
        elif imei != "":
            return (imei, "imei" + "^" + dt + "^" + packages);
        elif mac != "":
            return (mac, "mac" + "^" + dt + "^" + packages);
        else:
            return ("","");
    except:
        return ("","");


def combine(onetuple):
    return onetuple[0] + "\t" + onetuple[1];

def myreduce(value1,value2):
    return value1 + "&" + value2;


def main(sc):
    input_path = sys.argv[1];
    output_path = sys.argv[2];
    lines = sc.textFile(input_path);
    result = lines.map(parse).filter(myfilter).reduceByKey(myreduce).map(combine);
    codec = "org.apache.hadoop.io.compress.GzipCodec";
    result.saveAsTextFile(output_path, codec);
    #output = result.collect();
    #for (uid, info) in output:
    #    try:
    #        for oneline in info:
    #            print uid + "\t"  + oneline;
    #    except:
    #        pass;
    sc.stop();


if __name__ == "__main__":
    #conf = SparkConf().setMaster("local[*]");
    #conf = conf.setAppName(APP_NAME);
    sc = SparkContext();
    main(sc);
